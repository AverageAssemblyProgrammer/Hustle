* all the statements, expresions and functions are uppercase in this file, 
but in the code please write the code in lowercase.
(some still may be uppercase) *

if any problem please see the stdlib file. 

statements  : newline* statement (NEWLINE+ statement)* NEWLINE*

statement		: KEYWORD:return expr?
						: KEYWORD:CONTINUE
						: KEYWORD:BREAK
						: expr

expr        : KEYWORD:VAR IDENTIFIER EQ expr
            : comp-expr ((KEYWORD:AND|KEYWORD:OR) comp-expr)*

comp-expr   : NOT comp-expr
            : arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*

arith-expr  :	term ((PLUS|MINUS) term)*

term        : factor ((MUL|DIV) factor)*

factor      : (PLUS|MINUS) factor
            : power

power       : call (POW factor)*

call        : atom (LPAREN (expr (COMMA expr)*)? RPAREN)?

atom        : INT|FLOAT|STRING|IDENTIFIER
            : LPAREN expr RPAREN
            : list-expr
            : if-expr
            : for-expr
            : while-expr
            : func-def

list-expr   : LSQUARE (expr (COMMA expr)*)? RSQUARE

if-expr     : KEYWORD:IF expr KEYWORD:THEN
              (statement if-expr-b|if-expr-c?)
            | (NEWLINE statements KEYWORD:END|if-expr-b|if-expr-c)

if-expr-b   : KEYWORD:ELIF expr KEYWORD:THEN
              (statement if-expr-b|if-expr-c?)
            | (NEWLINE statements KEYWORD:END|if-expr-b|if-expr-c)

if-expr-c   : KEYWORD:ELSE
              statement
            | (NEWLINE statements KEYWORD:END)

for-expr    : KEYWORD:FOR IDENTIFIER EQ expr KEYWORD:TO expr 
              (KEYWORD:STEP expr)? KEYWORD:THEN
              statement
            | (NEWLINE statements KEYWORD:END)

while-expr  : KEYWORD:WHILE expr KEYWORD:THEN
              statement
            | (NEWLINE statements KEYWORD:END)

func-def    : KEYWORD:func IDENTIFIER?
              LPAREN (IDENTIFIER (COMMA IDENTIFIER)*)? RPAREN
              (ARROW expr)
            | (NEWLINE statements KEYWORD:END)

include : KEYWORD:include LPAREN "INCLUDE_FILE_NAME" RPAREN KEYWORD-RETURN

tsleep : KEYWORD:tsleep LPAREN SLEEP_TIME RPAREN
tsleep : depend :- stdlib 

sys : KEYWORD:sys LPAREN "COMMAND" RPAREN
sys : depend :- stdlib 

randint : KEYWORD:randint LPAREN INT COMMA INT RPAREN
randint : depend :- stdlib 

exit : KEYWORD:exit LPAREN (INT or STRING or IDENTIFIER) RPAREN
exit : depend :- stdlib 

str : KEYWORD:str LPAREN (INT or IDENTIFIER or FLOAT) RPAREN
str : depend :- stdlib 

int : KEYWORD:int LPAREN (STRING or IDENTIFIER) RPAREN
int : depend :- stdlib 

float : KEYWORD:float LPAREN (IDENTIFIER or STRING) RPAREN
float : depend :- stdlib